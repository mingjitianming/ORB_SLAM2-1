{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "Examples/ROS/ORB_SLAM2/src/ros_mono.cc",
			"settings":
			{
				"buffer_size": 2463,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Examples/ROS/ORB_SLAM2/src/ros_rgbd.cc",
			"settings":
			{
				"buffer_size": 3296,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Examples/ROS/ORB_SLAM2/src/ros_stereo.cc",
			"settings":
			{
				"buffer_size": 5349,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/System.h",
			"settings":
			{
				"buffer_size": 5644,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/System.cpp",
			"settings":
			{
				"buffer_size": 14829,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/ORBVocabulary.h",
			"settings":
			{
				"buffer_size": 1139,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/KeyFrameDatabase.h",
			"settings":
			{
				"buffer_size": 1695,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/KeyFrameDatabase.cpp",
			"settings":
			{
				"buffer_size": 12370,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Tracking.h",
			"settings":
			{
				"buffer_size": 6552,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Tracking.cpp",
			"settings":
			{
				"buffer_size": 62460,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Map.h",
			"settings":
			{
				"buffer_size": 2006,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Map.cpp",
			"settings":
			{
				"buffer_size": 3275,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/MapDrawer.h",
			"settings":
			{
				"buffer_size": 1683,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MapDrawer.cpp",
			"settings":
			{
				"buffer_size": 8558,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Frame.h",
			"settings":
			{
				"buffer_size": 7745,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Converter.h",
			"settings":
			{
				"buffer_size": 2406,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/FrameDrawer.h",
			"settings":
			{
				"buffer_size": 1736,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FrameDrawer.cpp",
			"settings":
			{
				"buffer_size": 7034,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/KeyFrame.h",
			"settings":
			{
				"buffer_size": 7359,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Initializer.h",
			"settings":
			{
				"buffer_size": 4822,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/LocalMapping.h",
			"settings":
			{
				"buffer_size": 2846,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/LoopClosing.h",
			"settings":
			{
				"buffer_size": 3602,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/MapPoint.h",
			"settings":
			{
				"buffer_size": 4668,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Optimizer.h",
			"settings":
			{
				"buffer_size": 2530,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/ORBextractor.h",
			"settings":
			{
				"buffer_size": 3208,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/ORBmatcher.h",
			"settings":
			{
				"buffer_size": 5700,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/PnPsolver.h",
			"settings":
			{
				"buffer_size": 6541,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Sim3Solver.h",
			"settings":
			{
				"buffer_size": 3345,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Viewer.h",
			"settings":
			{
				"buffer_size": 2035,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Converter.cpp",
			"settings":
			{
				"buffer_size": 4007,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Frame.cpp",
			"settings":
			{
				"buffer_size": 26073,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Initializer.cpp",
			"settings":
			{
				"buffer_size": 34948,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/KeyFrame.cpp",
			"settings":
			{
				"buffer_size": 23654,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/LocalMapping.cpp",
			"settings":
			{
				"buffer_size": 29855,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/LoopClosing.cpp",
			"settings":
			{
				"buffer_size": 31931,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MapPoint.cpp",
			"settings":
			{
				"buffer_size": 14388,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Optimizer.cpp",
			"settings":
			{
				"buffer_size": 48298,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/ORBextractor.cpp",
			"settings":
			{
				"buffer_size": 46830,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/ORBmatcher.cpp",
			"settings":
			{
				"buffer_size": 59399,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/PnPsolver.cpp",
			"settings":
			{
				"buffer_size": 37821,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Sim3Solver.cpp",
			"settings":
			{
				"buffer_size": 12770,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Viewer.cpp",
			"settings":
			{
				"buffer_size": 7402,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/BowVector.cpp",
			"settings":
			{
				"buffer_size": 2752,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/BowVector.h",
			"settings":
			{
				"buffer_size": 2042,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/FClass.h",
			"settings":
			{
				"buffer_size": 1685,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/FeatureVector.h",
			"settings":
			{
				"buffer_size": 1118,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/FeatureVector.cpp",
			"settings":
			{
				"buffer_size": 1831,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/FORB.cpp",
			"settings":
			{
				"buffer_size": 4428,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/FORB.h",
			"settings":
			{
				"buffer_size": 1720,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/ScoringObject.cpp",
			"settings":
			{
				"buffer_size": 7890,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/ScoringObject.h",
			"settings":
			{
				"buffer_size": 2530,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 393 files for \"EXPORT\" (case sensitive, whole word)\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/BowVector.h:\n   29  \n   30  /// L-norms for normalization\n   31: EXPORT typedef enum LNorm\n   32  {\n   33    L1,\n   ..\n   36  \n   37  /// Weighting type\n   38: EXPORT typedef enum WeightingType\n   39  {\n   40    TF_IDF,\n   ..\n   45  \n   46  /// Scoring type\n   47: EXPORT typedef enum ScoringType\n   48  {\n   49    L1_NORM,\n   ..\n   57  /// Vector of words to represent images\n   58  /// stl的map结构，key为wordId，value为tfidf中的tf\n   59: class EXPORT BowVector: \n   60  \tpublic std::map<WordId, WordValue>\n   61  {\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FClass.h:\n   25   * (TemplatedVocabulary, TemplatedDatabase, ...)\n   26   */\n   27: class EXPORT FClass\n   28  {\n   29    class TDescriptor;\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FeatureVector.h:\n   21  \n   22  /// Vector of nodes with indexes of local features\n   23: class EXPORT FeatureVector: \n   24    public std::map<NodeId, std::vector<unsigned int> >\n   25  {\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FORB.h:\n   22  \n   23  /// Functions to manipulate ORB descriptors\n   24: class EXPORT FORB : protected FClass\n   25  {\n   26  public:\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/ScoringObject.h:\n   18  \n   19  /// Base class of scoring functions\n   20: class EXPORT GeneralScoring \n   21  {\n   22  public:\n   ..\n   74    \n   75  /// L1 Scoring object\n   76: class EXPORT __SCORING_CLASS(L1Scoring, true, L1);\n   77  \n   78  /// L2 Scoring object\n   79: class EXPORT __SCORING_CLASS(L2Scoring, true, L2);\n   80  \n   81  /// Chi square Scoring object\n   82: class EXPORT __SCORING_CLASS(ChiSquareScoring, true, L1);\n   83  \n   84  /// KL divergence Scoring object\n   85: class EXPORT __SCORING_CLASS(KLScoring, true, L1);\n   86  \n   87  /// Bhattacharyya Scoring object\n   88: class EXPORT __SCORING_CLASS(BhattacharyyaScoring, true, L1);\n   89  \n   90  /// Dot product Scoring object\n   91: class EXPORT __SCORING_CLASS(DotProductScoring, false, L1);\n   92  \n   93  #undef __SCORING_CLASS\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h:\n   44  template<class TDescriptor, class F>\n   45  /// Generic Vocabulary\n   46: class EXPORT TemplatedVocabulary \n   47  {\n   48  public:\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/config.h:\n    7    #endif\n    8    #ifdef DBoW2_EXPORTS\n    9:     #define EXPORT __declspec(dllexport)\n   10    #else\n   11:     #define EXPORT __declspec(dllimport) \n   12    #endif\n   13  #else\n   14:   #define EXPORT \n   15  #endif\n   16  \n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Random.h:\n   21  \n   22  /// Functions to generate pseudo-random numbers\n   23: class EXPORT Random\n   24  {\n   25  public:\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Timestamp.h:\n   20  \n   21  /// Timestamp\n   22: class EXPORT Timestamp\n   23  {\n   24  public:\n\n/home/zmy/project_ws/ORB-SLAM2/Vocabulary/ORBvoc.txt:\n    File too large, skipping\n\n20 matches across 9 files\n\n\nSearching 393 files for \"F\" (case sensitive, whole word)\n\n/home/zmy/project_ws/ORB-SLAM2/build/mono_kitti:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/rgbd_tum:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/stereo_EuRoC:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/stereo_kitti:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/feature_tests.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_C.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_CXX.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CompilerIdC/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c:\n  461  #ifdef COMPILER_VERSION_MAJOR\n  462  char const info_version[] = {\n  463:   'I', 'N', 'F', 'O', ':',\n  464    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  465    COMPILER_VERSION_MAJOR,\n  ...\n  479  #ifdef SIMULATE_VERSION_MAJOR\n  480  char const info_simulate_version[] = {\n  481:   'I', 'N', 'F', 'O', ':',\n  482    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  483    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CompilerIdCXX/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp:\n  456  #ifdef COMPILER_VERSION_MAJOR\n  457  char const info_version[] = {\n  458:   'I', 'N', 'F', 'O', ':',\n  459    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  460    COMPILER_VERSION_MAJOR,\n  ...\n  474  #ifdef SIMULATE_VERSION_MAJOR\n  475  char const info_simulate_version[] = {\n  476:   'I', 'N', 'F', 'O', ':',\n  477    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  478    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/Monocular/mono_tum:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/feature_tests.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_C.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_CXX.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CompilerIdC/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c:\n  461  #ifdef COMPILER_VERSION_MAJOR\n  462  char const info_version[] = {\n  463:   'I', 'N', 'F', 'O', ':',\n  464    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  465    COMPILER_VERSION_MAJOR,\n  ...\n  479  #ifdef SIMULATE_VERSION_MAJOR\n  480  char const info_simulate_version[] = {\n  481:   'I', 'N', 'F', 'O', ':',\n  482    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  483    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CompilerIdCXX/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp:\n  456  #ifdef COMPILER_VERSION_MAJOR\n  457  char const info_version[] = {\n  458:   'I', 'N', 'F', 'O', ':',\n  459    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  460    COMPILER_VERSION_MAJOR,\n  ...\n  474  #ifdef SIMULATE_VERSION_MAJOR\n  475  char const info_simulate_version[] = {\n  476:   'I', 'N', 'F', 'O', ':',\n  477    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  478    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/include/KeyFrame.h:\n   48  {\n   49  public:\n   50:     KeyFrame(Frame &F, Map* pMap, KeyFrameDatabase* pKFDB);\n   51  \n   52      // Pose functions\n\n/home/zmy/project_ws/ORB-SLAM2/include/KeyFrameDatabase.h:\n   56  \n   57     // Relocalization\n   58:    std::vector<KeyFrame*> DetectRelocalizationCandidates(Frame* F);\n   59  \n   60  protected:\n\n/home/zmy/project_ws/ORB-SLAM2/include/ORBmatcher.h:\n   53       * 并标记了这些点是否在当前帧的视野中，即mbTrackInView \\n\n   54       * 对这些MapPoints，在其投影点附近根据描述子距离选取匹配，以及最终的方向投票机制进行剔除\n   55:      * @param  F           当前帧\n   56       * @param  vpMapPoints Local MapPoints\n   57       * @param  th          阈值\n   ..\n   59       * @see SearchLocalPoints() isInFrustum()\n   60       */\n   61:     int SearchByProjection(Frame &F, const std::vector<MapPoint*> &vpMapPoints, const float th=3);\n   62  \n   63      // Project MapPoints tracked in last frame into the current frame and search matches.\n   ..\n   98       * 通过距离阈值、比例阈值和角度投票进行剔除误匹配\n   99       * @param  pKF               KeyFrame\n  100:      * @param  F                 Current Frame\n  101       * @param  vpMapPointMatches F中MapPoints对应的匹配，NULL表示未匹配\n  102       * @return                   成功匹配的数量\n  103       */\n  104:     int SearchByBoW(KeyFrame *pKF, Frame &F, std::vector<MapPoint*> &vpMapPointMatches);\n  105      int SearchByBoW(KeyFrame *pKF1, KeyFrame* pKF2, std::vector<MapPoint*> &vpMatches12);\n  106  \n\n/home/zmy/project_ws/ORB-SLAM2/include/PnPsolver.h:\n   61  class PnPsolver {\n   62   public:\n   63:   PnPsolver(const Frame &F, const vector<MapPoint*> &vpMapPointMatches);\n   64  \n   65    ~PnPsolver();\n\n/home/zmy/project_ws/ORB-SLAM2/src/Initializer.cpp:\n  126      // 步骤3：调用多线程分别用于计算fundamental matrix和homography\n  127      vector<bool> vbMatchesInliersH, vbMatchesInliersF;\n  128:     float SH, SF; // score for H and F\n  129:     cv::Mat H, F; // H and F\n  130  \n  131      // ref是引用的功能:http://en.cppreference.com/w/cpp/utility/functional/ref\n  ...\n  133      thread threadH(&Initializer::FindHomography,this,ref(vbMatchesInliersH), ref(SH), ref(H));\n  134      // 计算fundamental matrix并打分\n  135:     thread threadF(&Initializer::FindFundamental,this,ref(vbMatchesInliersF), ref(SF), ref(F));\n  136  \n  137      // Wait until both threads have finished\n  ...\n  150          return ReconstructH(vbMatchesInliersH,H,mK,R21,t21,vP3D,vbTriangulated,1.0,50);\n  151      else //if(pF_HF>0.6)\n  152:         return ReconstructF(vbMatchesInliersF,F,mK,R21,t21,vP3D,vbTriangulated,1.0,50);\n  153  \n  154      return false;\n  ...\n  591   * \n  592   * 度量重构\n  593:  * 1. 由Fundamental矩阵结合相机内参K，得到Essential矩阵: \\f$ E = k'^T F k \\f$\n  594   * 2. SVD分解得到R t\n  595   * 3. 进行cheirality check, 从四个解中找出最合适的解\n\n/home/zmy/project_ws/ORB-SLAM2/src/KeyFrame.cpp:\n   29  long unsigned int KeyFrame::nNextId=0;\n   30  \n   31: KeyFrame::KeyFrame(Frame &F, Map *pMap, KeyFrameDatabase *pKFDB):\n   32:     mnFrameId(F.mnId),  mTimeStamp(F.mTimeStamp), mnGridCols(FRAME_GRID_COLS), mnGridRows(FRAME_GRID_ROWS),\n   33:     mfGridElementWidthInv(F.mfGridElementWidthInv), mfGridElementHeightInv(F.mfGridElementHeightInv),\n   34      mnTrackReferenceForFrame(0), mnFuseTargetForKF(0), mnBALocalForKF(0), mnBAFixedForKF(0),\n   35      mnLoopQuery(0), mnLoopWords(0), mnRelocQuery(0), mnRelocWords(0), mnBAGlobalForKF(0),\n   36:     fx(F.fx), fy(F.fy), cx(F.cx), cy(F.cy), invfx(F.invfx), invfy(F.invfy),\n   37:     mbf(F.mbf), mb(F.mb), mThDepth(F.mThDepth), N(F.N), mvKeys(F.mvKeys), mvKeysUn(F.mvKeysUn),\n   38:     mvuRight(F.mvuRight), mvDepth(F.mvDepth), mDescriptors(F.mDescriptors.clone()),\n   39:     mBowVec(F.mBowVec), mFeatVec(F.mFeatVec), mnScaleLevels(F.mnScaleLevels), mfScaleFactor(F.mfScaleFactor),\n   40:     mfLogScaleFactor(F.mfLogScaleFactor), mvScaleFactors(F.mvScaleFactors), mvLevelSigma2(F.mvLevelSigma2),\n   41:     mvInvLevelSigma2(F.mvInvLevelSigma2), mnMinX(F.mnMinX), mnMinY(F.mnMinY), mnMaxX(F.mnMaxX),\n   42:     mnMaxY(F.mnMaxY), mK(F.mK), mvpMapPoints(F.mvpMapPoints), mpKeyFrameDB(pKFDB),\n   43:     mpORBvocabulary(F.mpORBvocabulary), mbFirstConnection(true), mpParent(NULL), mbNotErase(false),\n   44:     mbToBeErased(false), mbBad(false), mHalfBaseline(F.mb/2), mpMap(pMap)\n   45  {\n   46      mnId=nNextId++;\n   ..\n   51          mGrid[i].resize(mnGridRows);\n   52          for(int j=0; j<mnGridRows; j++)\n   53:             mGrid[i][j] = F.mGrid[i][j];\n   54      }\n   55  \n   56:     SetPose(F.mTcw);\n   57  }\n   58  \n   ..\n  615                      {\n  616                      // 如果该帧的子节点和父节点（祖孙节点）之间存在连接关系（共视）\n  617:                     // 举例：B-->A（B的父节点是A） C-->B（C的父节点是B） D--C（D与C相连） E--C（E与C相连） F--C（F与C相连） D-->A（D的父节点是A） E-->A（E的父节点是A）\n  618                      //      现在B挂了，于是C在与自己相连的D、E、F节点中找到父节点指向A的D\n  619                      //      此过程就是为了找到可以替换B的那个节点。\n\n/home/zmy/project_ws/ORB-SLAM2/src/KeyFrameDatabase.cpp:\n  233   * 3. 将与关键帧相连（权值最高）的前十个关键帧归为一组，计算累计得分\n  234   * 4. 只返回累计得分较高的组中分数最高的关键帧\n  235:  * @param F 需要重定位的帧\n  236   * @return  相似的关键帧\n  237   * @see III-E Bags of Words Place Recognition\n  238   */\n  239: vector<KeyFrame*> KeyFrameDatabase::DetectRelocalizationCandidates(Frame *F)\n  240  {\n  241      // 相对于关键帧的闭环检测DetectLoopCandidates，重定位检测中没法获得相连的关键帧\n  ...\n  248  \n  249          // words是检测图像是否匹配的枢纽，遍历该pKF的每一个word\n  250:         for(DBoW2::BowVector::const_iterator vit=F->mBowVec.begin(), vend=F->mBowVec.end(); vit != vend; vit++)\n  251          {\n  252              // 提取所有包含该word的KeyFrame\n  ...\n  256              {\n  257                  KeyFrame* pKFi=*lit;\n  258:                 if(pKFi->mnRelocQuery!=F->mnId)// pKFi还没有标记为pKF的候选帧\n  259                  {\n  260                      pKFi->mnRelocWords=0;\n  261:                     pKFi->mnRelocQuery=F->mnId;\n  262                      lKFsSharingWords.push_back(pKFi);\n  263                  }\n  ...\n  294          {\n  295              nscores++;// 这个变量后面没有用到\n  296:             float si = mpVoc->score(F->mBowVec,pKFi->mBowVec);\n  297              pKFi->mRelocScore=si;\n  298              lScoreAndMatch.push_back(make_pair(si,pKFi));\n  ...\n  321          {\n  322              KeyFrame* pKF2 = *vit;\n  323:             if(pKF2->mnRelocQuery!=F->mnId)\n  324                  continue;\n  325  \n\n/home/zmy/project_ws/ORB-SLAM2/src/ORBmatcher.cpp:\n   55   * 并标记了这些点是否在当前帧的视野中，即mbTrackInView \\n\n   56   * 对这些MapPoints，在其投影点附近根据描述子距离选取匹配，以及最终的方向投票机制进行剔除\n   57:  * @param  F           当前帧\n   58   * @param  vpMapPoints Local MapPoints\n   59   * @param  th          搜索范围因子：r = r * th * ScaleFactor\n   ..\n   61   * @see SearchLocalPoints() isInFrustum()\n   62   */\n   63: int ORBmatcher::SearchByProjection(Frame &F, const vector<MapPoint*> &vpMapPoints, const float th)\n   64  {\n   65      int nmatches=0;\n   ..\n   89  \n   90          // (pMP->mTrackProjX, pMP->mTrackProjY)：图像特征点坐标\n   91:         // r*F.mvScaleFactors[nPredictedLevel]：搜索范围\n   92          // nPredictedLevel-1：miniLevel\n   93          // nPredictedLevel：maxLevel\n   94          // step3：在2D投影点附近一定范围内搜索属于miniLevel~maxLevel层的特征点 ---> vIndices\n   95          const vector<size_t> vIndices =\n   96:                 F.GetFeaturesInArea(pMP->mTrackProjX,pMP->mTrackProjY,r*F.mvScaleFactors[nPredictedLevel],nPredictedLevel-1,nPredictedLevel);\n   97  \n   98          if(vIndices.empty())\n   ..\n  114  \n  115              // 如果Frame中的该兴趣点已经有对应的MapPoint了，则退出该次循环\n  116:             if(F.mvpMapPoints[idx])\n  117:                 if(F.mvpMapPoints[idx]->Observations()>0)\n  118                      continue;\n  119  \n  120:             if(F.mvuRight[idx]>0)\n  121              {\n  122:                 const float er = fabs(pMP->mTrackProjXR-F.mvuRight[idx]);\n  123:                 if(er>r*F.mvScaleFactors[nPredictedLevel])\n  124                      continue;\n  125              }\n  126  \n  127:             const cv::Mat &d = F.mDescriptors.row(idx);\n  128  \n  129              const int dist = DescriptorDistance(MPdescriptor,d);\n  ...\n  135                  bestDist=dist;\n  136                  bestLevel2 = bestLevel;\n  137:                 bestLevel = F.mvKeysUn[idx].octave;\n  138                  bestIdx=idx;\n  139              }\n  140              else if(dist<bestDist2)\n  141              {\n  142:                 bestLevel2 = F.mvKeysUn[idx].octave;\n  143                  bestDist2=dist;\n  144              }\n  ...\n  151                  continue;\n  152  \n  153:             F.mvpMapPoints[bestIdx]=pMP; // 为Frame中的兴趣点增加对应的MapPoint\n  154              nmatches++;\n  155          }\n  ...\n  204   * 通过距离阈值、比例阈值和角度投票进行剔除误匹配\n  205   * @param  pKF               KeyFrame\n  206:  * @param  F                 Current Frame\n  207   * @param  vpMapPointMatches F中MapPoints对应的匹配，NULL表示未匹配\n  208   * @return                   成功匹配的数量\n  209   */\n  210: int ORBmatcher::SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)\n  211  {\n  212      const vector<MapPoint*> vpMapPointsKF = pKF->GetMapPointMatches();\n  213  \n  214:     vpMapPointMatches = vector<MapPoint*>(F.N,static_cast<MapPoint*>(NULL));\n  215  \n  216      const DBoW2::FeatureVector &vFeatVecKF = pKF->mFeatVec;\n  ...\n  226      // 将属于同一节点(特定层)的ORB特征进行匹配\n  227      DBoW2::FeatureVector::const_iterator KFit = vFeatVecKF.begin();\n  228:     DBoW2::FeatureVector::const_iterator Fit = F.mFeatVec.begin();\n  229      DBoW2::FeatureVector::const_iterator KFend = vFeatVecKF.end();\n  230:     DBoW2::FeatureVector::const_iterator Fend = F.mFeatVec.end();\n  231  \n  232      while(KFit != KFend && Fit != Fend)\n  ...\n  264                          continue;\n  265  \n  266:                     const cv::Mat &dF = F.mDescriptors.row(realIdxF); // 取出F中该特征对应的描述子\n  267  \n  268                      const int dist =  DescriptorDistance(dKF,dF); // 求描述子的距离\n  ...\n  297                              // angle：每个特征点在提取描述子时的旋转主方向角度，如果图像旋转了，这个角度将发生改变\n  298                              // 所有的特征点的角度变化应该是一致的，通过直方图统计得到最准确的角度变化值\n  299:                             float rot = kp.angle-F.mvKeys[bestIdxF].angle;// 该特征点的角度变化值\n  300                              if(rot<0.0)\n  301                                  rot+=360.0f;\n  ...\n  321          else\n  322          {\n  323:             Fit = F.mFeatVec.lower_bound(KFit->first);\n  324          }\n  325      }\n  ...\n  535          }\n  536  \n  537:         // 详见SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)函数步骤4\n  538          if(bestDist<=TH_LOW)\n  539          {\n  ...\n  613  int ORBmatcher::SearchByBoW(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &vpMatches12)\n  614  {\n  615:     // 详细注释可参见：SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)\n  616  \n  617      const vector<cv::KeyPoint> &vKeysUn1 = pKF1->mvKeysUn;\n  ...\n  692  \n  693                  // 步骤4：根据阈值 和 角度投票剔除误匹配\n  694:                 // 详见SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)函数步骤4\n  695                  if(bestDist1<TH_LOW)\n  696                  {\n  ...\n  892                  // 依次检测，判断是否满足对极几何约束，满足约束就是匹配的特征点\n  893                  \n  894:                 // 详见SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)函数步骤4\n  895                  if(bestIdx2>=0)\n  896                  {\n  ...\n 1623                  }\n 1624  \n 1625:                 // 详见SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)函数步骤4\n 1626                  if(bestDist<=TH_HIGH)\n 1627                  {\n ....\n 1759                      nmatches++;\n 1760  \n 1761:                     // 详见SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)函数步骤4\n 1762                      if(mbCheckOrientation)\n 1763                      {\n\n/home/zmy/project_ws/ORB-SLAM2/src/PnPsolver.cpp:\n  102  // us表示图像坐标系下的2D点坐标\n  103  // alphas为真实3D点用4个虚拟控制点表达时的系数\n  104: PnPsolver::PnPsolver(const Frame &F, const vector<MapPoint*> &vpMapPointMatches):\n  105      pws(0), us(0), alphas(0), pcs(0), maximum_number_of_correspondences(0), number_of_correspondences(0), mnInliersi(0),\n  106      mnIterations(0), mnBestInliers(0), N(0)\n  ...\n  115      // 根据点数初始化容器的大小\n  116      mvpMapPointMatches = vpMapPointMatches;\n  117:     mvP2D.reserve(F.mvpMapPoints.size());\n  118:     mvSigma2.reserve(F.mvpMapPoints.size());\n  119:     mvP3Dw.reserve(F.mvpMapPoints.size());\n  120:     mvKeyPointIndices.reserve(F.mvpMapPoints.size());\n  121:     mvAllIndices.reserve(F.mvpMapPoints.size());\n  122  \n  123      int idx=0;\n  ...\n  130              if(!pMP->isBad())\n  131              {\n  132:                 const cv::KeyPoint &kp = F.mvKeysUn[i];//得到2维特征点, 将KeyPoint类型变为Point2f\n  133  \n  134                  mvP2D.push_back(kp.pt);//存放到mvP2D容器\n  135:                 mvSigma2.push_back(F.mvLevelSigma2[kp.octave]);//记录特征点是在哪一层提取出来的\n  136  \n  137                  cv::Mat Pos = pMP->GetWorldPos();//世界坐标系下的3D点\n  ...\n  147  \n  148      // Set camera calibration parameters\n  149:     fu = F.fx;\n  150:     fv = F.fy;\n  151:     uc = F.cx;\n  152:     vc = F.cy;\n  153  \n  154      SetRansacParameters();\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/feature_tests.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_C.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_CXX.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c:\n  461  #ifdef COMPILER_VERSION_MAJOR\n  462  char const info_version[] = {\n  463:   'I', 'N', 'F', 'O', ':',\n  464    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  465    COMPILER_VERSION_MAJOR,\n  ...\n  479  #ifdef SIMULATE_VERSION_MAJOR\n  480  char const info_simulate_version[] = {\n  481:   'I', 'N', 'F', 'O', ':',\n  482    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  483    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp:\n  456  #ifdef COMPILER_VERSION_MAJOR\n  457  char const info_version[] = {\n  458:   'I', 'N', 'F', 'O', ':',\n  459    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  460    COMPILER_VERSION_MAJOR,\n  ...\n  474  #ifdef SIMULATE_VERSION_MAJOR\n  475  char const info_simulate_version[] = {\n  476:   'I', 'N', 'F', 'O', ':',\n  477    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  478    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FClass.h:\n   22  /**\n   23   * This class must be inherited. Derived classes can be used as the\n   24:  * parameter F when creating Templated structures\n   25   * (TemplatedVocabulary, TemplatedDatabase, ...)\n   26   */\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h:\n   41  \n   42  /// @param TDescriptor class of descriptor\n   43: /// @param F class of descriptor functions\n   44: template<class TDescriptor, class F>\n   45  /// Generic Vocabulary\n   46  class EXPORT TemplatedVocabulary \n   ..\n   74     * @param voc\n   75     */\n   76:   TemplatedVocabulary(const TemplatedVocabulary<TDescriptor, F> &voc);\n   77    \n   78    /**\n   ..\n   87     * @return reference to this vocabulary\n   88     */\n   89:   TemplatedVocabulary<TDescriptor, F>& operator=(\n   90:     const TemplatedVocabulary<TDescriptor, F> &voc);\n   91    \n   92    /** \n   ..\n  446  // --------------------------------------------------------------------------\n  447  \n  448: template<class TDescriptor, class F>\n  449: TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary\n  450    (int k, int L, WeightingType weighting, ScoringType scoring)\n  451    : m_k(k), m_L(L), m_weighting(weighting), m_scoring(scoring),\n  ...\n  457  // --------------------------------------------------------------------------\n  458  \n  459: template<class TDescriptor, class F>\n  460: TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary\n  461    (const std::string &filename): m_scoring_object(NULL)\n  462  {\n  ...\n  466  // --------------------------------------------------------------------------\n  467  \n  468: template<class TDescriptor, class F>\n  469: TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary\n  470    (const char *filename): m_scoring_object(NULL)\n  471  {\n  ...\n  475  // --------------------------------------------------------------------------\n  476  \n  477: template<class TDescriptor, class F>\n  478: void TemplatedVocabulary<TDescriptor,F>::createScoringObject()\n  479  {\n  480    delete m_scoring_object;\n  ...\n  512  // --------------------------------------------------------------------------\n  513  \n  514: template<class TDescriptor, class F>\n  515: void TemplatedVocabulary<TDescriptor,F>::setScoringType(ScoringType type)\n  516  {\n  517    m_scoring = type;\n  ...\n  521  // --------------------------------------------------------------------------\n  522  \n  523: template<class TDescriptor, class F>\n  524: void TemplatedVocabulary<TDescriptor,F>::setWeightingType(WeightingType type)\n  525  {\n  526    this->m_weighting = type;\n  ...\n  529  // --------------------------------------------------------------------------\n  530  \n  531: template<class TDescriptor, class F>\n  532: TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary(\n  533:   const TemplatedVocabulary<TDescriptor, F> &voc)\n  534    : m_scoring_object(NULL)\n  535  {\n  ...\n  539  // --------------------------------------------------------------------------\n  540  \n  541: template<class TDescriptor, class F>\n  542: TemplatedVocabulary<TDescriptor,F>::~TemplatedVocabulary()\n  543  {\n  544    delete m_scoring_object;\n  ...\n  547  // --------------------------------------------------------------------------\n  548  \n  549: template<class TDescriptor, class F>\n  550: TemplatedVocabulary<TDescriptor, F>& \n  551: TemplatedVocabulary<TDescriptor,F>::operator=\n  552:   (const TemplatedVocabulary<TDescriptor, F> &voc)\n  553  {  \n  554    this->m_k = voc.m_k;\n  ...\n  570  // --------------------------------------------------------------------------\n  571  \n  572: template<class TDescriptor, class F>\n  573: void TemplatedVocabulary<TDescriptor,F>::create(\n  574    const std::vector<std::vector<TDescriptor> > &training_features)\n  575  {\n  ...\n  604  // --------------------------------------------------------------------------\n  605  \n  606: template<class TDescriptor, class F>\n  607: void TemplatedVocabulary<TDescriptor,F>::create(\n  608    const std::vector<std::vector<TDescriptor> > &training_features,\n  609    int k, int L)\n  ...\n  617  // --------------------------------------------------------------------------\n  618  \n  619: template<class TDescriptor, class F>\n  620: void TemplatedVocabulary<TDescriptor,F>::create(\n  621    const std::vector<std::vector<TDescriptor> > &training_features,\n  622    int k, int L, WeightingType weighting, ScoringType scoring)\n  ...\n  633  // --------------------------------------------------------------------------\n  634  \n  635: template<class TDescriptor, class F>\n  636: void TemplatedVocabulary<TDescriptor,F>::getFeatures(\n  637    const vector<vector<TDescriptor> > &training_features, \n  638    vector<pDescriptor> &features) const\n  ...\n  654  // --------------------------------------------------------------------------\n  655  \n  656: template<class TDescriptor, class F>\n  657: void TemplatedVocabulary<TDescriptor,F>::HKmeansStep(NodeId parent_id, \n  658    const vector<pDescriptor> &descriptors, int current_level)\n  659  {\n  ...\n  729            \n  730            \n  731:           F::meanValue(cluster_descriptors, clusters[c]);\n  732          }\n  733          \n  ...\n  747        for(fit = descriptors.begin(); fit != descriptors.end(); ++fit)//, ++d)\n  748        {\n  749:         double best_dist = F::distance(*(*fit), clusters[0]);\n  750          unsigned int icluster = 0;\n  751          \n  752          for(unsigned int c = 1; c < clusters.size(); ++c)\n  753          {\n  754:           double dist = F::distance(*(*fit), clusters[c]);\n  755            if(dist < best_dist)\n  756            {\n  ...\n  837  // --------------------------------------------------------------------------\n  838  \n  839: template<class TDescriptor, class F>\n  840: void TemplatedVocabulary<TDescriptor, F>::initiateClusters\n  841    (const vector<pDescriptor> &descriptors, vector<TDescriptor> &clusters) const\n  842  {\n  ...\n  846  // --------------------------------------------------------------------------\n  847  \n  848: template<class TDescriptor, class F>\n  849: void TemplatedVocabulary<TDescriptor,F>::initiateClustersKMpp(\n  850    const vector<pDescriptor> &pfeatures, vector<TDescriptor> &clusters) const\n  851  {\n  ...\n  888    for(fit = pfeatures.begin(); fit != pfeatures.end(); ++fit, ++dit)\n  889    {\n  890:     *dit = F::distance(*(*fit), clusters.back());\n  891    }  \n  892  \n  ...\n  899        if(*dit > 0)\n  900        {\n  901:         double dist = F::distance(*(*fit), clusters.back());\n  902          if(dist < *dit) *dit = dist; // 仅保存最近的距离，即与最近聚类中心的距离\n  903        }\n  ...\n  939  // --------------------------------------------------------------------------\n  940  \n  941: template<class TDescriptor, class F>\n  942: void TemplatedVocabulary<TDescriptor,F>::createWords()\n  943  {\n  944    m_words.resize(0);\n  ...\n  964  // --------------------------------------------------------------------------\n  965  \n  966: template<class TDescriptor, class F>\n  967: void TemplatedVocabulary<TDescriptor,F>::setNodeWeights\n  968    (const vector<vector<TDescriptor> > &training_features)\n  969  {\n  ...\n 1022  // --------------------------------------------------------------------------\n 1023  \n 1024: template<class TDescriptor, class F>\n 1025: inline unsigned int TemplatedVocabulary<TDescriptor,F>::size() const\n 1026  {\n 1027    return m_words.size();\n ....\n 1030  // --------------------------------------------------------------------------\n 1031  \n 1032: template<class TDescriptor, class F>\n 1033: inline bool TemplatedVocabulary<TDescriptor,F>::empty() const\n 1034  {\n 1035    return m_words.empty();\n ....\n 1038  // --------------------------------------------------------------------------\n 1039  \n 1040: template<class TDescriptor, class F>\n 1041: float TemplatedVocabulary<TDescriptor,F>::getEffectiveLevels() const\n 1042  {\n 1043    long sum = 0;\n ....\n 1055  // --------------------------------------------------------------------------\n 1056  \n 1057: template<class TDescriptor, class F>\n 1058: TDescriptor TemplatedVocabulary<TDescriptor,F>::getWord(WordId wid) const\n 1059  {\n 1060    return m_words[wid]->descriptor;\n ....\n 1063  // --------------------------------------------------------------------------\n 1064  \n 1065: template<class TDescriptor, class F>\n 1066: WordValue TemplatedVocabulary<TDescriptor, F>::getWordWeight(WordId wid) const\n 1067  {\n 1068    return m_words[wid]->weight;\n ....\n 1071  // --------------------------------------------------------------------------\n 1072  \n 1073: template<class TDescriptor, class F>\n 1074: WordId TemplatedVocabulary<TDescriptor, F>::transform\n 1075    (const TDescriptor& feature) const\n 1076  {\n ....\n 1087  // --------------------------------------------------------------------------\n 1088  \n 1089: template<class TDescriptor, class F>\n 1090: void TemplatedVocabulary<TDescriptor,F>::transform(\n 1091    const std::vector<TDescriptor>& features, BowVector &v) const\n 1092  {\n ....\n 1148  // --------------------------------------------------------------------------\n 1149  \n 1150: template<class TDescriptor, class F> \n 1151: void TemplatedVocabulary<TDescriptor,F>::transform(\n 1152    const std::vector<TDescriptor>& features,\n 1153    BowVector &v, FeatureVector &fv, int levelsup) const\n ....\n 1220  // --------------------------------------------------------------------------\n 1221  \n 1222: template<class TDescriptor, class F> \n 1223: inline double TemplatedVocabulary<TDescriptor,F>::score\n 1224    (const BowVector &v1, const BowVector &v2) const\n 1225  {\n ....\n 1229  // --------------------------------------------------------------------------\n 1230  \n 1231: template<class TDescriptor, class F>\n 1232: void TemplatedVocabulary<TDescriptor,F>::transform\n 1233    (const TDescriptor &feature, WordId &id) const\n 1234  {\n ....\n 1239  // --------------------------------------------------------------------------\n 1240  \n 1241: template<class TDescriptor, class F>\n 1242: void TemplatedVocabulary<TDescriptor,F>::transform(const TDescriptor &feature, \n 1243    WordId &word_id, WordValue &weight, NodeId *nid, int levelsup) const\n 1244  { \n ....\n 1260      final_id = nodes[0];\n 1261   \n 1262:     double best_d = F::distance(feature, m_nodes[final_id].descriptor);\n 1263  \n 1264      for(nit = nodes.begin() + 1; nit != nodes.end(); ++nit)\n 1265      {\n 1266        NodeId id = *nit;\n 1267:       double d = F::distance(feature, m_nodes[id].descriptor);\n 1268        if(d < best_d)\n 1269        {\n ....\n 1285  // --------------------------------------------------------------------------\n 1286  \n 1287: template<class TDescriptor, class F>\n 1288: NodeId TemplatedVocabulary<TDescriptor,F>::getParentNode\n 1289    (WordId wid, int levelsup) const\n 1290  {\n ....\n 1300  // --------------------------------------------------------------------------\n 1301  \n 1302: template<class TDescriptor, class F>\n 1303: void TemplatedVocabulary<TDescriptor,F>::getWordsFromNode\n 1304    (NodeId nid, std::vector<WordId> &words) const\n 1305  {\n ....\n 1341  // --------------------------------------------------------------------------\n 1342  \n 1343: template<class TDescriptor, class F>\n 1344: int TemplatedVocabulary<TDescriptor,F>::stopWords(double minWeight)\n 1345  {\n 1346    int c = 0;\n ....\n 1359  // --------------------------------------------------------------------------\n 1360  \n 1361: template<class TDescriptor, class F>\n 1362: bool TemplatedVocabulary<TDescriptor,F>::loadFromTextFile(const std::string &filename)\n 1363  {\n 1364      ifstream f;\n ....\n 1421  \n 1422          stringstream ssd;\n 1423:         for(int iD=0;iD<F::L;iD++) // F::L\n 1424          {\n 1425              string sElement;\n ....\n 1427              ssd << sElement << \" \";\n 1428  \t}\n 1429:         F::fromString(m_nodes[nid].descriptor, ssd.str());\n 1430  \n 1431          ssnode >> m_nodes[nid].weight;\n ....\n 1451  // --------------------------------------------------------------------------\n 1452  \n 1453: template<class TDescriptor, class F>\n 1454: void TemplatedVocabulary<TDescriptor,F>::saveToTextFile(const std::string &filename) const\n 1455  {\n 1456      fstream f;\n ....\n 1468              f << 0 << \" \";\n 1469  \n 1470:         f << F::toString(node.descriptor) << \" \" << (double)node.weight << endl;\n 1471      }\n 1472  \n ....\n 1476  // --------------------------------------------------------------------------\n 1477  \n 1478: template<class TDescriptor, class F>\n 1479: bool TemplatedVocabulary<TDescriptor,F>::loadFromBinaryFile(const std::string &filename) {\n 1480    fstream f;\n 1481    f.open(filename.c_str(), ios_base::in|ios::binary);\n ....\n 1504  \t//m_nodes[nid].parent = *(const int*)buf;\n 1505  \tm_nodes[m_nodes[nid].parent].children.push_back(nid);\n 1506: \tm_nodes[nid].descriptor = cv::Mat(1, F::L, CV_8U); //F::L\n 1507: \tmemcpy(m_nodes[nid].descriptor.data, buf+4, F::L); //F::L\n 1508: \tm_nodes[nid].weight = *(float*)(buf+4+F::L); // F::L\n 1509: \tif (buf[8+F::L]) { // is leaf //F::L\n 1510  \t  int wid = m_words.size();\n 1511  \t  m_words.resize(wid+1);\n ....\n 1526  // --------------------------------------------------------------------------\n 1527  \n 1528: template<class TDescriptor, class F>\n 1529: void TemplatedVocabulary<TDescriptor,F>::saveToBinaryFile(const std::string &filename) const {\n 1530    fstream f;\n 1531    f.open(filename.c_str(), ios_base::out|ios::binary);\n 1532    unsigned int nb_nodes = m_nodes.size();\n 1533    float _weight;\n 1534:   unsigned int size_node = sizeof(m_nodes[0].parent) + F::L*sizeof(char) + sizeof(_weight) + sizeof(bool); //F::L\n 1535    f.write((char*)&nb_nodes, sizeof(nb_nodes));\n 1536    f.write((char*)&size_node, sizeof(size_node));\n ....\n 1542  \tconst Node& node = m_nodes[i];\n 1543  \tf.write((char*)&node.parent, sizeof(node.parent));\n 1544: \tf.write((char*)node.descriptor.data, F::L);//F::L\n 1545  \t_weight = node.weight; f.write((char*)&_weight, sizeof(_weight));\n 1546  \tbool is_leaf = node.isLeaf(); f.write((char*)&is_leaf, sizeof(is_leaf)); // i put this one at the end for alignement....\n ....\n 1551  // --------------------------------------------------------------------------\n 1552  \n 1553: template<class TDescriptor, class F>\n 1554: void TemplatedVocabulary<TDescriptor,F>::save(const std::string &filename) const\n 1555  {\n 1556    cv::FileStorage fs(filename.c_str(), cv::FileStorage::WRITE);\n ....\n 1562  // --------------------------------------------------------------------------\n 1563  \n 1564: template<class TDescriptor, class F>\n 1565: void TemplatedVocabulary<TDescriptor,F>::load(const std::string &filename)\n 1566  {\n 1567    cv::FileStorage fs(filename.c_str(), cv::FileStorage::READ);\n ....\n 1573  // --------------------------------------------------------------------------\n 1574  \n 1575: template<class TDescriptor, class F>\n 1576: void TemplatedVocabulary<TDescriptor,F>::save(cv::FileStorage &f,\n 1577    const std::string &name) const\n 1578  {\n ....\n 1636        f << \"parentId\" << (int)pid;\n 1637        f << \"weight\" << (double)child.weight;\n 1638:       f << \"descriptor\" << F::toString(child.descriptor);\n 1639        f << \"}\";\n 1640        \n ....\n 1670  // --------------------------------------------------------------------------\n 1671  \n 1672: template<class TDescriptor, class F>\n 1673: void TemplatedVocabulary<TDescriptor,F>::load(const cv::FileStorage &fs,\n 1674    const std::string &name)\n 1675  {\n ....\n 1704      m_nodes[pid].children.push_back(nid);\n 1705      \n 1706:     F::fromString(m_nodes[nid].descriptor, d);\n 1707    }\n 1708    \n ....\n 1729   * @param voc\n 1730   */\n 1731: template<class TDescriptor, class F>\n 1732  std::ostream& operator<<(std::ostream &os, \n 1733:   const TemplatedVocabulary<TDescriptor,F> &voc)\n 1734  {\n 1735    os << \"Vocabulary: k = \" << voc.getBranchingFactor() \n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/feature_tests.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_C.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CMakeDetermineCompilerABI_CXX.bin:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c:\n  461  #ifdef COMPILER_VERSION_MAJOR\n  462  char const info_version[] = {\n  463:   'I', 'N', 'F', 'O', ':',\n  464    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  465    COMPILER_VERSION_MAJOR,\n  ...\n  479  #ifdef SIMULATE_VERSION_MAJOR\n  480  char const info_simulate_version[] = {\n  481:   'I', 'N', 'F', 'O', ':',\n  482    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  483    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/a.out:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp:\n  456  #ifdef COMPILER_VERSION_MAJOR\n  457  char const info_version[] = {\n  458:   'I', 'N', 'F', 'O', ':',\n  459    'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  460    COMPILER_VERSION_MAJOR,\n  ...\n  474  #ifdef SIMULATE_VERSION_MAJOR\n  475  char const info_simulate_version[] = {\n  476:   'I', 'N', 'F', 'O', ':',\n  477    's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  478    SIMULATE_VERSION_MAJOR,\n\n/home/zmy/project_ws/ORB-SLAM2/Vocabulary/bin_vocabulary:\n    <binary>\n\n/home/zmy/project_ws/ORB-SLAM2/Vocabulary/ORBvoc.txt:\n    File too large, skipping\n\n/home/zmy/project_ws/ORB-SLAM2/Vocabulary/ORBvoc.txt.tar.gz:\n    <binary>\n\n37907 matches across 46 files\n",
			"settings":
			{
				"buffer_size": 39094,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Thirdparty/DBoW2/DUtils/config.h",
			"settings":
			{
				"buffer_size": 278,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h",
			"settings":
			{
				"buffer_size": 46007,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_binary_edge.hpp",
			"settings":
			{
				"buffer_size": 7868,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_binary_edge.h",
			"settings":
			{
				"buffer_size": 4621,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_edge.h",
			"settings":
			{
				"buffer_size": 3912,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_multi_edge.h",
			"settings":
			{
				"buffer_size": 3921,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_multi_edge.hpp",
			"settings":
			{
				"buffer_size": 7378,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_unary_edge.h",
			"settings":
			{
				"buffer_size": 3603,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_unary_edge.hpp",
			"settings":
			{
				"buffer_size": 4571,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_vertex.h",
			"settings":
			{
				"buffer_size": 4545,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/base_vertex.hpp",
			"settings":
			{
				"buffer_size": 2152,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/batch_stats.cpp",
			"settings":
			{
				"buffer_size": 3360,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/batch_stats.h",
			"settings":
			{
				"buffer_size": 3977,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/block_solver.h",
			"settings":
			{
				"buffer_size": 7597,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/block_solver.hpp",
			"settings":
			{
				"buffer_size": 22027,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/cache.cpp",
			"settings":
			{
				"buffer_size": 5242,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/cache.h",
			"settings":
			{
				"buffer_size": 5013,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/creators.h",
			"settings":
			{
				"buffer_size": 2694,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/eigen_types.h",
			"settings":
			{
				"buffer_size": 4167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/estimate_propagator.cpp",
			"settings":
			{
				"buffer_size": 10141,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/estimate_propagator.h",
			"settings":
			{
				"buffer_size": 6509,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/factory.cpp",
			"settings":
			{
				"buffer_size": 6420,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/factory.h",
			"settings":
			{
				"buffer_size": 5968,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/g2o_core_api.h",
			"settings":
			{
				"buffer_size": 866,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp",
			"settings":
			{
				"buffer_size": 9489,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_dijkstra.h",
			"settings":
			{
				"buffer_size": 4660,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_graph.cpp",
			"settings":
			{
				"buffer_size": 4368,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_graph.h",
			"settings":
			{
				"buffer_size": 8282,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_graph_action.cpp",
			"settings":
			{
				"buffer_size": 8960,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/hyper_graph_action.h",
			"settings":
			{
				"buffer_size": 8091,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/jacobian_workspace.cpp",
			"settings":
			{
				"buffer_size": 3376,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/jacobian_workspace.h",
			"settings":
			{
				"buffer_size": 3359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/linear_solver.h",
			"settings":
			{
				"buffer_size": 3811,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp",
			"settings":
			{
				"buffer_size": 7345,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h",
			"settings":
			{
				"buffer_size": 4265,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/matrix_operations.h",
			"settings":
			{
				"buffer_size": 3671,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/matrix_structure.cpp",
			"settings":
			{
				"buffer_size": 3566,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/matrix_structure.h",
			"settings":
			{
				"buffer_size": 2621,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/openmp_mutex.h",
			"settings":
			{
				"buffer_size": 2916,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimizable_graph.cpp",
			"settings":
			{
				"buffer_size": 27537,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimizable_graph.h",
			"settings":
			{
				"buffer_size": 25699,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm.cpp",
			"settings":
			{
				"buffer_size": 2283,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm.h",
			"settings":
			{
				"buffer_size": 4409,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp",
			"settings":
			{
				"buffer_size": 8625,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h",
			"settings":
			{
				"buffer_size": 3493,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp",
			"settings":
			{
				"buffer_size": 4914,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h",
			"settings":
			{
				"buffer_size": 6261,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp",
			"settings":
			{
				"buffer_size": 3491,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h",
			"settings":
			{
				"buffer_size": 2177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp",
			"settings":
			{
				"buffer_size": 6704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h",
			"settings":
			{
				"buffer_size": 3852,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_property.h",
			"settings":
			{
				"buffer_size": 2632,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp",
			"settings":
			{
				"buffer_size": 3537,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h",
			"settings":
			{
				"buffer_size": 2769,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/parameter.cpp",
			"settings":
			{
				"buffer_size": 1587,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/parameter.h",
			"settings":
			{
				"buffer_size": 2201,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/parameter_container.cpp",
			"settings":
			{
				"buffer_size": 4459,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/parameter_container.h",
			"settings":
			{
				"buffer_size": 2862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel.cpp",
			"settings":
			{
				"buffer_size": 1670,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel.h",
			"settings":
			{
				"buffer_size": 2922,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp",
			"settings":
			{
				"buffer_size": 3401,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel_factory.h",
			"settings":
			{
				"buffer_size": 4799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp",
			"settings":
			{
				"buffer_size": 4973,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/robust_kernel_impl.h",
			"settings":
			{
				"buffer_size": 4781,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/solver.cpp",
			"settings":
			{
				"buffer_size": 2610,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/solver.h",
			"settings":
			{
				"buffer_size": 5482,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix.h",
			"settings":
			{
				"buffer_size": 9536,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp",
			"settings":
			{
				"buffer_size": 26052,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h",
			"settings":
			{
				"buffer_size": 10950,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h",
			"settings":
			{
				"buffer_size": 4278,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp",
			"settings":
			{
				"buffer_size": 3192,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_optimizer.cpp",
			"settings":
			{
				"buffer_size": 20717,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Thirdparty/g2o/g2o/core/sparse_optimizer.h",
			"settings":
			{
				"buffer_size": 12640,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Vocabulary/bin_vocabulary.cpp",
			"settings":
			{
				"buffer_size": 1646,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"sublimelinter",
				"SublimeLinter: Show All Errors"
			],
			[
				"INSTA",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 185.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/zmy/project_ws/ORB-SLAM2"
	],
	"file_history":
	[
		"/home/zmy/Downloads/imu_tk-master/src/calibration.cpp",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_yaml_parser.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_viz3d.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_video_saver.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_vecutils.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_time_buffer.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_transform.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_tictoc.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_syslog.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_strutils.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_stereo_calib.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_stdout.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_singleton.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_shape_detect.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_rot.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_raycast.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_rater.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_random.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_pnp.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_pf.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_performance.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_perf.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_pca.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_os.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_numeric.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_mapping.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_line_match.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_kdtree.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_lane_detect.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_improc.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_gridmap2d.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_geometry3d.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_geometry2d.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_fileutils.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_exposure.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_debug_draw.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_debug.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_data_struct.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_data_saver.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_data_buffer.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_cv_convert.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_common.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_color_lut.hpp",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_color_filter.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_cam_odom_calib.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_cam_capture.h",
		"/home/zmy/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-03/vs_common_lib/vs_common/vs_calib.h",
		"/home/zmy/project_ws/ucoslam-1.0.8/CMakeLists.txt",
		"/home/zmy/project_ws/ORB-SLAM2/Examples/ROS/ORB_SLAM2/src/ros_stereo.cc",
		"/home/zmy/project_ws/ORB-SLAM2/include/System.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/System.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Vocabulary/bin_vocabulary.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/Tracking.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/Tracking.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/Frame.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/Frame.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/MapPoint.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/MapPoint.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/ORBextractor.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/ORBextractor.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/KeyFrame.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/KeyFrame.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/LoopClosing.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/Map.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/Map.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/LocalMapping.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/LocalMapping.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/MapDrawer.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/MapDrawer.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/FrameDrawer.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/FrameDrawer.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/ORBmatcher.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/ORBmatcher.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/Optimizer.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/Optimizer.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/include/PnPsolver.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/PnPsolver.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/ORBVocabulary.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/Initializer.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/KeyFrameDatabase.h",
		"/home/zmy/project_ws/ORB-SLAM2/src/Sim3Solver.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/src/Viewer.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/src/Converter.cpp",
		"/home/zmy/project_ws/ceres_pose_graph/CMakeLists.txt",
		"/home/zmy/project_ws/covariance_estimate/Jacobian/CMakeLists.txt",
		"/home/zmy/project_ws/ORB-SLAM2/src/Initializer.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/src/KeyFrameDatabase.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/src/LoopClosing.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FeatureVector.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FeatureVector.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FORB.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FORB.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/ScoringObject.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/ScoringObject.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/BowVector.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/BowVector.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DBoW2/FClass.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Random.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Random.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Timestamp.cpp",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/Timestamp.h",
		"/home/zmy/project_ws/ORB-SLAM2/Thirdparty/DBoW2/DUtils/config.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/Sim3Solver.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/Viewer.h",
		"/home/zmy/project_ws/ORB-SLAM2/include/Converter.h",
		"/home/zmy/project_ws/demo_qrocde/CMakeLists.txt",
		"/home/zmy/.cache/.fr-resKsm/sf_mobile_robot/CMakeLists.txt",
		"/home/zmy/Downloads/vs_common-master/CMakeLists.txt",
		"/home/zmy/Downloads/opencv-3.3.1/CMakeLists.txt",
		"/home/zmy/Downloads/opencv-3.3.1/3rdparty/ippicv/ippicv.cmake",
		"/D/Documents/WeChat Files/wxid_4634576346312/FileStorage/File/2020-02/slam/slam/1213/2018-2-10_sf_office.2d",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/README.md",
		"/C/Users/Administrator/Desktop/sf_matcher_ws/sf_matcher_ws/src/slam_gmapping/gmapping/launch/slam_gmapping_pr2.launch",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/Examples/ROS/ORB_SLAM2/src/ros_stereo.cc",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/Converter.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/Frame.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/FrameDrawer.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/Initializer.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/KeyFrame.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/LocalMapping.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/KeyFrameDatabase.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/LoopClosing.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/include/Map.h",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/src/MapPoint.cpp",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/src/Optimizer.cpp",
		"/C/Users/Administrator/Desktop/ORB-SLAM2/src/ORBextractor.cpp"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 139.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"mK",
			"size()",
			"size",
			"mpVocabulary",
			"loadFromTextFile",
			"F",
			"F::L",
			"EXPORT",
			"ScoringType",
			"loadFromTextFile",
			"mnMaxKFid",
			"mvInvertedFile",
			"has_suffix",
			"mbActivateLocalizationMode",
			"mbReset"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/home/zmy/project_ws/ORB-SLAM2"
		}
	],
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Examples/ROS/ORB_SLAM2/src/ros_mono.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2463,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 125,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Examples/ROS/ORB_SLAM2/src/ros_rgbd.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3296,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 124,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Examples/ROS/ORB_SLAM2/src/ros_stereo.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5349,
						"regions":
						{
						},
						"selection":
						[
							[
								1519,
								1519
							]
						],
						"settings":
						{
							"SL.17.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4297,
										4298
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1511,
										1512
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 660.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/System.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5644,
						"regions":
						{
						},
						"selection":
						[
							[
								4986,
								4986
							]
						],
						"settings":
						{
							"SL.35.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5597,
										5598
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1283,
										1284
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2231.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/System.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14829,
						"regions":
						{
						},
						"selection":
						[
							[
								2732,
								2732
							]
						],
						"settings":
						{
							"SL.17.region_keys":
							[
							],
							"SL.54.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4527,
										4528
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1463,
										1464
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1286.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/ORBVocabulary.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1139,
						"regions":
						{
						},
						"selection":
						[
							[
								828,
								828
							]
						],
						"settings":
						{
							"SL.32.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/KeyFrameDatabase.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1695,
						"regions":
						{
						},
						"selection":
						[
							[
								1185,
								1185
							]
						],
						"settings":
						{
							"SL.23.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1660,
										1661
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1097,
										1098
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/KeyFrameDatabase.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12370,
						"regions":
						{
						},
						"selection":
						[
							[
								965,
								965
							]
						],
						"settings":
						{
							"SL.43.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 272.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "include/Tracking.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6552,
						"regions":
						{
						},
						"selection":
						[
							[
								5621,
								5621
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										6503,
										6504
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3837.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Tracking.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 62460,
						"regions":
						{
						},
						"selection":
						[
							[
								2349,
								2349
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1876,
										1877
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1461.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "include/Map.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2006,
						"regions":
						{
						},
						"selection":
						[
							[
								1338,
								1338
							]
						],
						"settings":
						{
							"SL.26.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1962,
										1963
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1003,
										1004
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 861.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Map.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3275,
						"regions":
						{
						},
						"selection":
						[
							[
								906,
								906
							]
						],
						"settings":
						{
							"SL.46.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										908,
										909
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										906,
										907
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 390.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "include/MapDrawer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1683,
						"regions":
						{
						},
						"selection":
						[
							[
								1080,
								1080
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1633,
										1634
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1014,
										1015
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 376.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/MapDrawer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8558,
						"regions":
						{
						},
						"selection":
						[
							[
								1472,
								1472
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										964,
										965
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1716.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "include/Frame.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7745,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 123,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "include/Converter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2406,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 122,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "include/FrameDrawer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1736,
						"regions":
						{
						},
						"selection":
						[
							[
								1101,
								1101
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1688,
										1689
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1050,
										1051
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 772.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/FrameDrawer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7034,
						"regions":
						{
						},
						"selection":
						[
							[
								1297,
								1297
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1296,
										1297
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1295,
										1296
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 339.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "include/KeyFrame.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7359,
						"regions":
						{
						},
						"selection":
						[
							[
								1280,
								1280
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1127,
										1128
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 669.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "include/Initializer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4822,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 121,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "include/LocalMapping.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2846,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 120,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "include/LoopClosing.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3602,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 119,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "include/MapPoint.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4668,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 118,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "include/Optimizer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2530,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 117,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "include/ORBextractor.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3208,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 116,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "include/ORBmatcher.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5700,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 115,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "include/PnPsolver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6541,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 114,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "include/Sim3Solver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3345,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "include/Viewer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2035,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "src/Converter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4007,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "src/Frame.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26073,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.39.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "src/Initializer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34948,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "src/KeyFrame.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23654,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "src/LocalMapping.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29855,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "src/LoopClosing.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31931,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "src/MapPoint.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14388,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "src/Optimizer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48298,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "src/ORBextractor.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46830,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "src/ORBmatcher.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 59399,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "src/PnPsolver.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37821,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "src/Sim3Solver.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12770,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "src/Viewer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7402,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "Thirdparty/DBoW2/DBoW2/BowVector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2752,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "Thirdparty/DBoW2/DBoW2/BowVector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2042,
						"regions":
						{
						},
						"selection":
						[
							[
								621,
								621
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										645,
										646
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										611,
										612
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 728.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "Thirdparty/DBoW2/DBoW2/FClass.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1685,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1652,
										1653
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										613,
										614
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "Thirdparty/DBoW2/DBoW2/FeatureVector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1118,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "Thirdparty/DBoW2/DBoW2/FeatureVector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1831,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "Thirdparty/DBoW2/DBoW2/FORB.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4428,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "Thirdparty/DBoW2/DBoW2/FORB.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1720,
						"regions":
						{
						},
						"selection":
						[
							[
								437,
								437
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1686,
										1687
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										428,
										429
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 244.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "Thirdparty/DBoW2/DBoW2/ScoringObject.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7890,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "Thirdparty/DBoW2/DBoW2/ScoringObject.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2530,
						"regions":
						{
						},
						"selection":
						[
							[
								1504,
								1504
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1959,
										1960
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1421,
										1422
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1410.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 51,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39094,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										182,
										188
									],
									[
										277,
										283
									],
									[
										382,
										388
									],
									[
										555,
										561
									],
									[
										771,
										777
									],
									[
										973,
										979
									],
									[
										1201,
										1207
									],
									[
										1392,
										1398
									],
									[
										1497,
										1503
									],
									[
										1592,
										1598
									],
									[
										1695,
										1701
									],
									[
										1808,
										1814
									],
									[
										1914,
										1920
									],
									[
										2029,
										2035
									],
									[
										2286,
										2292
									],
									[
										2469,
										2475
									],
									[
										2532,
										2538
									],
									[
										2608,
										2614
									],
									[
										2780,
										2786
									],
									[
										2929,
										2935
									],
									[
										3947,
										3948
									],
									[
										4181,
										4182
									],
									[
										4582,
										4583
									],
									[
										4816,
										4817
									],
									[
										5683,
										5684
									],
									[
										5917,
										5918
									],
									[
										6364,
										6365
									],
									[
										6598,
										6599
									],
									[
										6826,
										6827
									],
									[
										7070,
										7071
									],
									[
										7288,
										7289
									],
									[
										7506,
										7507
									],
									[
										7791,
										7792
									],
									[
										8002,
										8003
									],
									[
										8280,
										8281
									],
									[
										8577,
										8578
									],
									[
										8601,
										8602
									],
									[
										8613,
										8614
									],
									[
										8947,
										8948
									],
									[
										9198,
										9199
									],
									[
										9368,
										9369
									],
									[
										9583,
										9584
									],
									[
										9644,
										9645
									],
									[
										9665,
										9666
									],
									[
										9771,
										9772
									],
									[
										9820,
										9821
									],
									[
										10058,
										10059
									],
									[
										10068,
										10069
									],
									[
										10078,
										10079
									],
									[
										10088,
										10089
									],
									[
										10101,
										10102
									],
									[
										10117,
										10118
									],
									[
										10142,
										10143
									],
									[
										10153,
										10154
									],
									[
										10169,
										10170
									],
									[
										10184,
										10185
									],
									[
										10197,
										10198
									],
									[
										10217,
										10218
									],
									[
										10250,
										10251
									],
									[
										10271,
										10272
									],
									[
										10296,
										10297
									],
									[
										10340,
										10341
									],
									[
										10361,
										10362
									],
									[
										10388,
										10389
									],
									[
										10420,
										10421
									],
									[
										10466,
										10467
									],
									[
										10502,
										10503
									],
									[
										10535,
										10536
									],
									[
										10581,
										10582
									],
									[
										10609,
										10610
									],
									[
										10627,
										10628
									],
									[
										10645,
										10646
									],
									[
										10674,
										10675
									],
									[
										10688,
										10689
									],
									[
										10708,
										10709
									],
									[
										10773,
										10774
									],
									[
										10913,
										10914
									],
									[
										11100,
										11101
									],
									[
										11155,
										11156
									],
									[
										11364,
										11365
									],
									[
										11686,
										11687
									],
									[
										11867,
										11868
									],
									[
										12063,
										12064
									],
									[
										12088,
										12089
									],
									[
										12303,
										12304
									],
									[
										12452,
										12453
									],
									[
										12656,
										12657
									],
									[
										12896,
										12897
									],
									[
										13120,
										13121
									],
									[
										13359,
										13360
									],
									[
										13549,
										13550
									],
									[
										13826,
										13827
									],
									[
										13882,
										13883
									],
									[
										14091,
										14092
									],
									[
										14138,
										14139
									],
									[
										14244,
										14245
									],
									[
										14347,
										14348
									],
									[
										14396,
										14397
									],
									[
										14535,
										14536
									],
									[
										14766,
										14767
									],
									[
										14947,
										14948
									],
									[
										15097,
										15098
									],
									[
										15305,
										15306
									],
									[
										15511,
										15512
									],
									[
										15696,
										15697
									],
									[
										15978,
										15979
									],
									[
										16127,
										16128
									],
									[
										16302,
										16303
									],
									[
										16661,
										16662
									],
									[
										16867,
										16868
									],
									[
										17018,
										17019
									],
									[
										17287,
										17288
									],
									[
										17524,
										17525
									],
									[
										17787,
										17788
									],
									[
										17997,
										17998
									],
									[
										18231,
										18232
									],
									[
										18512,
										18513
									],
									[
										18848,
										18849
									],
									[
										18900,
										18901
									],
									[
										18950,
										18951
									],
									[
										19011,
										19012
									],
									[
										19067,
										19068
									],
									[
										19233,
										19234
									],
									[
										19388,
										19389
									],
									[
										19589,
										19590
									],
									[
										19611,
										19612
									],
									[
										19633,
										19634
									],
									[
										19655,
										19656
									],
									[
										20341,
										20342
									],
									[
										20575,
										20576
									],
									[
										21010,
										21011
									],
									[
										21244,
										21245
									],
									[
										21540,
										21541
									],
									[
										21798,
										21799
									],
									[
										21871,
										21872
									],
									[
										22055,
										22056
									],
									[
										22198,
										22199
									],
									[
										22263,
										22264
									],
									[
										22437,
										22438
									],
									[
										22479,
										22480
									],
									[
										22784,
										22785
									],
									[
										22826,
										22827
									],
									[
										23062,
										23063
									],
									[
										23104,
										23105
									],
									[
										23333,
										23334
									],
									[
										23380,
										23381
									],
									[
										23589,
										23590
									],
									[
										23636,
										23637
									],
									[
										23849,
										23850
									],
									[
										23896,
										23897
									],
									[
										24121,
										24122
									],
									[
										24163,
										24164
									],
									[
										24236,
										24237
									],
									[
										24428,
										24429
									],
									[
										24470,
										24471
									],
									[
										24680,
										24681
									],
									[
										24723,
										24724
									],
									[
										24767,
										24768
									],
									[
										24830,
										24831
									],
									[
										25020,
										25021
									],
									[
										25067,
										25068
									],
									[
										25302,
										25303
									],
									[
										25349,
										25350
									],
									[
										25598,
										25599
									],
									[
										25645,
										25646
									],
									[
										25940,
										25941
									],
									[
										25987,
										25988
									],
									[
										26255,
										26256
									],
									[
										26302,
										26303
									],
									[
										26473,
										26474
									],
									[
										26694,
										26695
									],
									[
										26900,
										26901
									],
									[
										27132,
										27133
									],
									[
										27180,
										27181
									],
									[
										27437,
										27438
									],
									[
										27484,
										27485
									],
									[
										27714,
										27715
									],
									[
										27850,
										27851
									],
									[
										28112,
										28113
									],
									[
										28159,
										28160
									],
									[
										28354,
										28355
									],
									[
										28401,
										28402
									],
									[
										28634,
										28635
									],
									[
										28696,
										28697
									],
									[
										28894,
										28895
									],
									[
										28948,
										28949
									],
									[
										29148,
										29149
									],
									[
										29196,
										29197
									],
									[
										29399,
										29400
									],
									[
										29453,
										29454
									],
									[
										29674,
										29675
									],
									[
										29727,
										29728
									],
									[
										29950,
										29951
									],
									[
										30000,
										30001
									],
									[
										30207,
										30208
									],
									[
										30254,
										30255
									],
									[
										30489,
										30490
									],
									[
										30537,
										30538
									],
									[
										30805,
										30806
									],
									[
										30862,
										30863
									],
									[
										31079,
										31080
									],
									[
										31126,
										31127
									],
									[
										31345,
										31346
									],
									[
										31392,
										31393
									],
									[
										31597,
										31598
									],
									[
										31792,
										31793
									],
									[
										32021,
										32022
									],
									[
										32070,
										32071
									],
									[
										32279,
										32280
									],
									[
										32326,
										32327
									],
									[
										32552,
										32553
									],
									[
										32598,
										32599
									],
									[
										32799,
										32800
									],
									[
										32846,
										32847
									],
									[
										33006,
										33007
									],
									[
										33020,
										33021
									],
									[
										33152,
										33153
									],
									[
										33397,
										33398
									],
									[
										33444,
										33445
									],
									[
										33597,
										33598
									],
									[
										33826,
										33827
									],
									[
										33873,
										33874
									],
									[
										34171,
										34172
									],
									[
										34187,
										34188
									],
									[
										34244,
										34245
									],
									[
										34253,
										34254
									],
									[
										34304,
										34305
									],
									[
										34314,
										34315
									],
									[
										34337,
										34338
									],
									[
										34359,
										34360
									],
									[
										34573,
										34574
									],
									[
										34620,
										34621
									],
									[
										34895,
										34896
									],
									[
										34949,
										34950
									],
									[
										35213,
										35214
									],
									[
										35221,
										35222
									],
									[
										35569,
										35570
									],
									[
										35616,
										35617
									],
									[
										35880,
										35881
									],
									[
										35927,
										35928
									],
									[
										36184,
										36185
									],
									[
										36231,
										36232
									],
									[
										36443,
										36444
									],
									[
										36651,
										36652
									],
									[
										36698,
										36699
									],
									[
										36855,
										36856
									],
									[
										36998,
										36999
									],
									[
										37099,
										37100
									],
									[
										37808,
										37809
									],
									[
										38042,
										38043
									],
									[
										38473,
										38474
									],
									[
										38707,
										38708
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								21870,
								21870
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										21332,
										21333
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 12936.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "Thirdparty/DBoW2/DUtils/config.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 278,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										215,
										216
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										205,
										206
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46007,
						"regions":
						{
						},
						"selection":
						[
							[
								10508,
								10508
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										11896,
										11897
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8336.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "Thirdparty/g2o/g2o/core/base_binary_edge.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7868,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "Thirdparty/g2o/g2o/core/base_binary_edge.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "Thirdparty/g2o/g2o/core/base_edge.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3912,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "Thirdparty/g2o/g2o/core/base_multi_edge.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3921,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "Thirdparty/g2o/g2o/core/base_multi_edge.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7378,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "Thirdparty/g2o/g2o/core/base_unary_edge.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3603,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "Thirdparty/g2o/g2o/core/base_unary_edge.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4571,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "Thirdparty/g2o/g2o/core/base_vertex.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4545,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "Thirdparty/g2o/g2o/core/base_vertex.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2152,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "Thirdparty/g2o/g2o/core/batch_stats.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3360,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "Thirdparty/g2o/g2o/core/batch_stats.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3977,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "Thirdparty/g2o/g2o/core/block_solver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7597,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "Thirdparty/g2o/g2o/core/block_solver.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22027,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "Thirdparty/g2o/g2o/core/cache.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5242,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "Thirdparty/g2o/g2o/core/cache.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5013,
						"regions":
						{
						},
						"selection":
						[
							[
								1984,
								1984
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2183,
										2184
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1741,
										1742
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 779.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "Thirdparty/g2o/g2o/core/creators.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2694,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "Thirdparty/g2o/g2o/core/eigen_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4167,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "Thirdparty/g2o/g2o/core/estimate_propagator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10141,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "Thirdparty/g2o/g2o/core/estimate_propagator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6509,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "Thirdparty/g2o/g2o/core/factory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "Thirdparty/g2o/g2o/core/factory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5968,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "Thirdparty/g2o/g2o/core/g2o_core_api.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 866,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9489,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "Thirdparty/g2o/g2o/core/hyper_dijkstra.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4660,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "Thirdparty/g2o/g2o/core/hyper_graph.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4368,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "Thirdparty/g2o/g2o/core/hyper_graph.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8282,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "Thirdparty/g2o/g2o/core/hyper_graph_action.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "Thirdparty/g2o/g2o/core/hyper_graph_action.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8091,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "Thirdparty/g2o/g2o/core/jacobian_workspace.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3376,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "Thirdparty/g2o/g2o/core/jacobian_workspace.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3359,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "Thirdparty/g2o/g2o/core/linear_solver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3811,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7345,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4265,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "Thirdparty/g2o/g2o/core/matrix_operations.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3671,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "Thirdparty/g2o/g2o/core/matrix_structure.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3566,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "Thirdparty/g2o/g2o/core/matrix_structure.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "Thirdparty/g2o/g2o/core/openmp_mutex.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2916,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "Thirdparty/g2o/g2o/core/optimizable_graph.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27537,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 92,
					"file": "Thirdparty/g2o/g2o/core/optimizable_graph.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25699,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2283,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4409,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8625,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3493,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4914,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6261,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3491,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2177,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6704,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 102,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3852,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 103,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_property.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2632,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3537,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 105,
					"file": "Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2769,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 106,
					"file": "Thirdparty/g2o/g2o/core/parameter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1587,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 107,
					"file": "Thirdparty/g2o/g2o/core/parameter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2201,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 108,
					"file": "Thirdparty/g2o/g2o/core/parameter_container.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4459,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 109,
					"file": "Thirdparty/g2o/g2o/core/parameter_container.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2862,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 110,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1670,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 111,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2922,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 112,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3401,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 113,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel_factory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4799,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 114,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4973,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 115,
					"file": "Thirdparty/g2o/g2o/core/robust_kernel_impl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4781,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 116,
					"file": "Thirdparty/g2o/g2o/core/solver.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2610,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 117,
					"file": "Thirdparty/g2o/g2o/core/solver.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5482,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 118,
					"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9536,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 119,
					"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26052,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 120,
					"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10950,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 121,
					"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4278,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 122,
					"file": "Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3192,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 123,
					"file": "Thirdparty/g2o/g2o/core/sparse_optimizer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20717,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 124,
					"file": "Thirdparty/g2o/g2o/core/sparse_optimizer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12640,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.137.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 125,
					"file": "Vocabulary/bin_vocabulary.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1646,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"SL.138.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 150.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 163.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 401.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/Tracking.cpp"
			],
			[
				"sys",
				"src/System.cpp"
			],
			[
				"ros",
				"Examples/ROS/ORB_SLAM2/src/ros_stereo.cc"
			],
			[
				"syste",
				"src/utils/system.h"
			],
			[
				"tereo",
				"utils/stereo_slam.cpp"
			],
			[
				"stereo",
				"~/project_ws/ucoslam-1.0.8/utils/stereo_slam.cpp"
			],
			[
				"cmak",
				"~/project_ws/ucoslam-1.0.8/utils/CMakeLists.txt"
			],
			[
				"ster",
				"~/project_ws/ucoslam-1.0.8/utils/ucoslam_stereocalibrate.cpp"
			],
			[
				"orbe",
				"include\\ORBextractor.h"
			],
			[
				"orbm",
				"include\\ORBmatcher.h"
			],
			[
				"or",
				"include\\ORBextractor.h"
			],
			[
				"VIEWER",
				"Examples\\ROS\\ORB_SLAM2\\src\\AR\\ViewerAR.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
